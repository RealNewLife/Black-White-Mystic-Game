using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerMove1 : MonoBehaviour
{
    bool activeESC= true;
    //PlayerMove
    private Rigidbody rb;
    public float runSpeed ;
    public GameObject cam1;
    public GameObject cam2;
    public Animator animator;
    public LayerMask layerBox;
    public float jump;
    public float gravity;
    float speed,jump1;
    float horizontal = 0;

    bool isbox;

    //Draw
    public Camera m_camera;
    public GameObject brush;
    public float posDraw;
    LineRenderer currentLineRenderer;
    Vector3 lastPos;
    bool activeSkill = true;

    //Arrow
    public Transform firePoint;
    public GameObject bulletPrefab;
    public float bulletForce = 2000f;
    void Start()
    {
        rb = GetComponent<Rigidbody>();
        speed = runSpeed;
        cam1.SetActive(true);
        cam2.SetActive(false);
        jump1 = jump;
    }

    void Update()
    {
        bool isGround = Physics.Raycast(transform.position , Vector3.down, 1f, layerBox);

        horizontal = Input.GetAxis("Horizontal")*runSpeed;
        animator.SetFloat("Speed",Mathf.Abs(horizontal));
        if (horizontal > 0)
        {
            transform.eulerAngles = new Vector3(0,0,0);
        }
        if (horizontal < 0)
        {
            transform.eulerAngles = new Vector3(0, 180,0);
        }
        if (Input.GetKeyDown(KeyCode.F1))
        {
            runSpeed = speed;
            jump = jump1;
            activeSkill = true;
            activeESC = true;
            cam1.SetActive(true);
            cam2.SetActive(false);
        }
        if (Input.GetKeyDown(KeyCode.F2))
        {
            runSpeed = 0f;
            jump = 0;
            activeSkill = false;
            activeESC = true;
            cam1.SetActive(false);
            cam2.SetActive(true);

        }
        if (Input.GetKeyDown(KeyCode.Escape))
        {
            activeESC = false;
        }
        if (Input.GetButtonDown("Jump") && isGround)
        {
            rb.velocity = Vector2.up * jump;
            

        }
        if (isGround == false)
        {
            animator.SetBool("Jump", true);
            
        }
        else
        {
            animator.SetBool("Jump", false);
        }
        if (activeSkill == true && activeESC == true)
        {
            Drawing();
        }
        if (Input.GetKeyDown(KeyCode.Mouse1) && (activeSkill == true && activeESC==true))
        {
            Shoot();
        }
    }

    private void FixedUpdate()
    {
        transform.position += new Vector3(horizontal * runSpeed, 0, 0);
        


    }

    void Drawing()
    {
        if (Input.GetKeyDown(KeyCode.Mouse0))
        {
            CreateBrush();
        }
        else if (Input.GetKey(KeyCode.Mouse0))
        {
            PointToMousePos();
        }
        else
        {
            currentLineRenderer = null;
        }
    }

    void CreateBrush()
    {
        GameObject brushInstance = Instantiate(brush);
        currentLineRenderer = brushInstance.GetComponent<LineRenderer>();

        //because you gotta have 2 points to start a line renderer, 
        Vector3 mousePos = m_camera.ScreenToWorldPoint(Input.mousePosition);
        mousePos.z = posDraw;
        currentLineRenderer.SetPosition(0, mousePos);
        currentLineRenderer.SetPosition(1, mousePos);

    }

    void AddAPoint(Vector3 pointPos)
    {
        currentLineRenderer.positionCount++;
        int positionIndex = currentLineRenderer.positionCount - 1;
        pointPos.z = posDraw;
        currentLineRenderer.SetPosition(positionIndex, pointPos);
    }

    void PointToMousePos()
    {
        Vector3 mousePos = m_camera.ScreenToWorldPoint(Input.mousePosition);
        if (lastPos != mousePos)
        {
            AddAPoint(mousePos);
            lastPos = mousePos;
        }
    }

    void Shoot()
    {
        GameObject bullet = Instantiate(bulletPrefab, firePoint.position, firePoint.rotation);
        Rigidbody rb = bullet.GetComponent<Rigidbody>();
        rb.AddForce(firePoint.up * bulletForce,ForceMode.Impulse);
    }

    //private void OnCollisionEnter(Collision collision)
    //{
    //    if (collision.gameObject.tag == "box")
    //    {
    //        isbox = true;
    //        animator.SetBool("Jump", false);
    //    }
    //}

    //private void OnCollisionExit(Collision collision)
    //{
    //    isbox = false;
    //    animator.SetBool("Jump", true);
    //}
}
